---
import { processDate } from "../../lib/utils";
import Anchor from "./Anchor.astro";
import Tags from "../tags/Tags.astro";

export type Props = {
  title: string;
  description: string;
  url: string;
  tags?: string[];
  published?: Date;
  updated?: Date;
  repoUrl?: string;
  demoUrl?: string;
};

const { title, description, url, tags, published, updated, repoUrl, demoUrl } = Astro.props;
const repoName = repoUrl?.includes("github") ? "GitHub" : repoUrl?.includes("gitlab") ? "GitLab" : "Repo";
---

<div class="relative theme-text theme-transition flex flex-col gap-3 mb-8">
  <div class="flex justify-between items-center">
    <Anchor url={url} additonalClasses="text-xl" hoverUnderline>
      {title}
    </Anchor>
    {(repoUrl || demoUrl) && (
      <div class="flex flex-row gap-5 md:flex hidden">
        <span>
          {repoUrl ? <Anchor url={repoUrl} external hoverUnmute>{repoName}</Anchor> : null}
        </span>
        <span>
          {demoUrl ? <Anchor url={demoUrl} external hoverUnmute>Live</Anchor> : null}
        </span>
      </div>
    ) || (
      <div class="flex flex-row gap-10 theme-muted hidden md:flex">
        <span class="theme-muted theme-transition">
          {published ? processDate(published) : null}
          {updated ? ` [${processDate(updated)}]` : null}
        </span>
      </div>
    )}
  </div>
  {description && (
    <p class="">
      {description}
    </p>
  )}
  {tags && tags.length > 0 && <Tags tags={tags}/>}
  <div class="flex flex-row gap-10 theme-muted md:hidden">
    <span class="theme-muted theme-transition">
      {published ? processDate(published) : null}
      {updated ? ` [${processDate(updated)}]` : null}
    </span>
  </div>
</div>